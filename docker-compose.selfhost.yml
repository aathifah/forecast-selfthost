# Docker Compose untuk Self-Hosting ML Forecast App
version: '3.8'

services:
  ml-forecast-app:
    build:
      context: .
      dockerfile: Dockerfile.selfhost
    container_name: ml-forecast-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PYTHONUNBUFFERED=1
      - FORECAST_N_JOBS=2
      - FORECAST_PROGRESS=1
      - FORECAST_DEBUG=0
      - MAX_DATA_ROWS=1000000
      - MAX_DATA_MONTHS=12
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./static:/app/static
    networks:
      - ml-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Optional: Nginx reverse proxy untuk SSL dan load balancing
  nginx:
    image: nginx:alpine
    container_name: ml-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - ml-forecast-app
    networks:
      - ml-network

  # Optional: Monitoring dengan Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: ml-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - ml-network

  # Optional: Grafana untuk dashboard monitoring
  grafana:
    image: grafana/grafana:latest
    container_name: ml-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - ml-network

networks:
  ml-network:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data:
